apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: lmz
  name: backend
  labels:
    app: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: mazene/devops-backend
          ports:
            - containerPort: 8000
          env:
            - name: DATABASE_PORT
              value: "5432"
            - name: DATABASE_HOST
              value: database-service
            - name: DATABASE_USER
              value: psql
            - name: DATABASE_PASSWORD
              value: psql
            - name: DATABASE_NAME
              value: devops_db
---

apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  namespace: lmz
  labels:
    app.kubernetes.io/component: controller
  # Mettre un nom unique pour la classe ingress
  name: lmz-backend
  annotations:
    ingressclass.kubernetes.io/is-default-class: "true"
spec:
  controller: k8s.io/ingress-nginx

---


apiVersion: v1
kind: Service
metadata:
  namespace: lmz
  name: backend-service
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 8012
      targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-ingress
  namespace: lmz
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-cluster-issuer
  
spec:
  ingressClassName: lmz-backend
  tls:
    - hosts:
        - backend.4al2.lmz.jbienvenu.fr
      secretName: backend-tls
  rules:
    - host: backend.4al2.lmz.jbienvenu.fr
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: backend-service
                port:
                  number: 8012
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: lmz
  name: database
  labels:
    app: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          env:
            - name: POSTGRES_USER
              value: psql
            - name: POSTGRES_PASSWORD
              value: psql
            - name: POSTGRES_DB
              value: devops_db
          ports:
            - containerPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  namespace: lmz
  name: database-service
spec:
  selector:
    app: database
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
